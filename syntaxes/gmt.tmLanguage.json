{
  "name": "Gmt",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#punctuations"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.gmt",
          "match": "^#.*$"
        }]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.gmt",
          "match": "((CoorX|CoorY|Position|Degree)(?=\\(Num\\)))|(Object[^,]*(?=\\(Ln/Ccl\\)))|(Param(?=\\(0/1\\)))|((Exception|Point[^,]*|Endpoint[^,]*|Center[^,]*|Radius|Vertex[^,]*|Direction)(?=\\(Pt\\)))|(Line(?=\\(Ln\\)))|(Circle(?=\\(Ccl\\)))|((?<=\\]: )(Point[^\\[,]*|Line[^\\[,]*|Ray|Circle|Segment)$)|((?<==)\\.\\.\\.(Obj\\?Obj|Obj<:\\.\\.\\.Obj_displayed>|Obj|FreePts))"
        },
        {
          "name": "constant.numeric.gmt",
          "match": "(?<=\\()Num(?=[\\)/])"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.control.operator.gmt",
          "match": ">|<|/|#"
        }]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.class.advanced.gmt",
          "match": "EdgePoint|CenterPoint|Circle3|Midpoint|Parallel|Perp|ABisect|PBisect|ShiftSeg|Compass|FixAngle|CopyAngle|Tangent|PolarLine|PolarPoint"
        },
        {
          "name": "entity.name.function.basic.gmt",
          "match": "Linepoint|Segment|Ray|Line|Intersect|Circle"
        },
        {
          "name": "string.function.levelsetting.gmt",
          "match": "initial|movepoints|hidden|named|result|explore|rules|check_level|undolist"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "named.gmt",
          "match": "(?<=named.+\\.)(Name|[A-Za-z0-9])"
        },
        {
          "name": "variable.other.constant.line.gmt",
          "match": "((?<=\\()Ln(?=[\\)/]))|([Ss][0-9]+)|(^.*(?==(Line|Ray|Parallel|Perp|ABisect|PBisect|FixAngle|CopyAnfle|Tangent|PolarLine|Segment|ShiftSeg)\\[))"
        },
        {
          "name": "storage.type.circle.gmt",
          "match": "((?<=[\\(/])Ccl(?=\\)))|([c][0-9]+)|(^.*(?==(Circle3|Compass|Circle)\\[))"
        },
        {
          "name": "variable.point.gmt",
          "match": "((?<=\\()Pt(?=\\)))|([A-RT-Z][0-9]*)|[A-Z]|(^.*(?==(Intersect|Midpoint|EdgePoint|CenterPoint|PolarPoint|Linepoint)?\\[))"
        },
        {
          "name": "variable.other.gmt",
          "match": "([A-Za-z][A-Za-z]+[0-9]*)|[a-z]"
        }
]
    },
    "punctuations": {
      "patterns": [
        {
          "name": "keyword.control.connector.gmt",
          "match": "\\.|\\||:"
        },
        {
          "name": "punctuation.bracket.gmt",
          "match": "\\[|\\]"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "keyword.control.argument.gmt",
          "match": "((?<=[\\(/])[01](?=[\\)/]))|((?<=EdgePoint\\[[^,]*,)(0|1))|((?<=(Intersect|Tangent)\\[[^,]*,[^,]*,)(0|1))"
        },
        {
          "name": "constant.numeric.gmt",
          "match": "-?[0-9]+\\.?[0-9]*"
        }
      ]
    }
  },
  "scopeName": "source.gmt"
}